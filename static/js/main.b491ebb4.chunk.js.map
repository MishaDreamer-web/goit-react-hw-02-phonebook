{"version":3,"sources":["components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js","components/ContactForm/ContactForm.module.scss"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChangeForm","target","value","setState","handleSubmitForm","event","preventDefault","onAddContact","props","validationFormField","id","shortid","resetForm","onUniqueChecked","alert","this","onSubmit","type","placeholder","onChange","pattern","title","className","styles","Input","Button","Component","ContactListItem","onRemove","onClick","ContactsList","contacts","length","map","Filter","filter","App","handleAddContact","newContact","handleCheckUniqueContact","isExistsContact","find","contact","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b491ebb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ContactList_Button__2HINY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Filter_Input__TN8JA\"};","import React, { Component } from 'react';\n\nimport shortid from 'shortid';\n\nimport styles from './ContactForm.module.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  state = INITIAL_STATE;\n\n  handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmitForm = event => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    const { onAddContact } = this.props;\n\n    const isValidForm = this.validationFormField();\n\n    if (!isValidForm) return;\n\n    onAddContact({ id: shortid(), name, number });\n\n    this.resetForm();\n  };\n\n  validationFormField = () => {\n    const { name, number } = this.state;\n    const { onUniqueChecked } = this.props;\n\n    if (!name || !number) {\n      alert('Some field is empty, please check it!');\n      return false;\n    }\n\n    return onUniqueChecked(name);\n  };\n\n  resetForm = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmitForm}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={this.handleChangeForm}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          className={styles.Input}\n        />\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={this.handleChangeForm}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          className={styles.Input}\n        />\n        <button type=\"submit\" className={styles.Button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nimport styles from './ContactList.module.scss';\n\nconst ContactListItem = ({ id, name, number, onRemove }) => {\n  return (\n    <li>\n      {name}: {number}{' '}\n      <button onClick={() => onRemove(id)} className={styles.Button}>\n        delete\n      </button>\n    </li>\n  );\n};\n\nconst ContactsList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onRemove={() => onRemove(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import PropTypes from 'prop-types';\n\nimport styles from './Filter.module.scss';\n\nconst Filter = ({ filter, onChange }) => {\n  // console.log(filter);\n  return (\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => onChange(target.value)}\n      placeholder=\"Enter name for Search\"\n      className={styles.Input}\n    />\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\n\nimport ContactForm from './ContactForm';\nimport ContactsList from './ContactList';\nimport Filter from './Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n\n    filter: '',\n  };\n\n  handleAddContact = newContact =>\n    this.setState(({ contacts }) => ({ contacts: [...contacts, newContact] }));\n\n  handleCheckUniqueContact = name => {\n    const { contacts } = this.state;\n\n    const isExistsContact = !!contacts.find(contact => contact.name === name);\n\n    isExistsContact && alert(`${name} is already in contacts`);\n\n    return !isExistsContact;\n  };\n\n  handleRemoveContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  handleFilterChange = filter => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onAddContact={this.handleAddContact}\n          onUniqueChecked={this.handleCheckUniqueContact}\n        />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactsList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// const link = React.createElement(\n//   'a',\n//   { href: 'reactjs.org', target: '_blank' },\n//   'Ссылочка',\n// );\n\n// const jsxLink = <a href=\"reactjs.org\">СсылочкаJsx</a>;\n\n// // console.log(link);\n// console.log(jsxLink);\n\n// ReactDOM.render(link, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ContactForm_Button__1WD28\",\"Input\":\"ContactForm_Input__1tKk0\"};"],"sourceRoot":""}